<?xml version="1.0" encoding="UTF-8"?>
<b:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:b="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">


	<b:bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<b:constructor-arg name="strength" value="12"></b:constructor-arg>
	</b:bean>
	<b:bean id="entryPoint"
		class="com.spring.security.JwtAuthenticationEntryPoint"></b:bean>
	<b:bean id="corsFilter"
		class="org.springframework.web.cors.UrlBasedCorsConfigurationSource">
		<b:property name="corsConfigurations">
			<b:map>
				<b:entry key="/**" value-ref="corsConfig" />
			</b:map>

		</b:property>

	</b:bean>
	<b:bean id="corsConfig"
		class="org.springframework.web.cors.CorsConfiguration">
		<b:property name="allowCredentials" value="true" />
		<b:property name="allowedHeaders" value="*" />
		<b:property name="allowedMethods" value="*" />
		<b:property name="allowedOrigins" value="*" />

	</b:bean>

	<!-- Auto-config không cho phép tự động chuyển sang trang login khi đường 
		dẫn không có quyền truy cập -->
	<!-- entry-point-ref : chỉ đến bean định nghĩa sẽ làm gì khi đường dẫn không 
		có quyền truy cập -->


	<http pattern="/auth/login" security="none" />
	<http pattern="/notify/**" security="none" />
	<http auto-config="false" entry-point-ref="entryPoint"
		use-expressions="true" create-session="stateless">
		<cors configuration-source-ref="corsFilter" />
		<csrf disabled="true" />
		<intercept-url pattern="/**" access="hasAuthority('GV')" />
		<!-- <intercept-url pattern="/auth/login" access="permitAll" /> -->
		<!-- <form-login login-page="/login" login-processing-url="/do-login" username-parameter="userName" 
			password-parameter="pwd" authentication-success-forward-url="/home" authentication-failure-forward-url="/login-failed" 
			/> -->
		<!-- <logout logout-url="/do-logout" -->
		<!-- logout-success-url="/logout-success" /> -->
		<custom-filter ref="filterBefore"
			before="BASIC_AUTH_FILTER" />

	</http>

	<b:bean id="filterBefore"
		class="com.spring.security.JwtAuthenticationTokenFilter"></b:bean>
	<b:bean id="expressionHandler"
		class="com.spring.config.security.expression.CustomMethodSecurityExpressionHandler">
		<b:property name="permissionEvaluator"
			ref="permissionEvaluator"></b:property>
	</b:bean>
	<b:bean id="permissionEvaluator"
		class="com.spring.config.security.expression.CustomPermissionEvaluator">
	</b:bean>

	<global-method-security
		pre-post-annotations="enabled">
		<expression-handler ref="expressionHandler" />
	</global-method-security>
	<authentication-manager
		alias="authenticationManager">
		<authentication-provider
			user-service-ref="userDetailService">
			<password-encoder ref="passwordEncoder" />
		</authentication-provider>
	</authentication-manager>


</b:beans>
